#include <SPI.h>
#include <Adb.h>

Connection * connection;


void adbEventHandler(Connection * connection, adb_eventType event, uint16_t length, uint8_t * data)
{
  if (event == ADB_CONNECTION_RECEIVE)
  {
    for (int pin=0; pin<=53; pin++)
    {
      byte val = data[pin];

      if (pin > 14 || val == 0)
      {
        digitalWrite(pin, val);
      } else if (pin > 1) 
      {
        if (val > 10) {
          analogWrite(pin, val);
        } else {
          analogWrite(pin, val);
        }
      };
    }
  }
}
 
void setup()
{
  Serial.begin(9600);
  Serial1.begin(9600);
  
  pinMode(13, OUTPUT);
  
  pinMode(30,OUTPUT);//rel for left hand manipulator -> open  
  pinMode(31,OUTPUT);//rel for left hand manipulator -> close  
  pinMode(32,OUTPUT);//rel for right hand manipulator -> open  
  pinMode(33,OUTPUT);//rel for right hand manipulator -> close  
  
//pwm         rel1    rel2
//13,12,11,10 9,8,7,6 5,4,3,2
//(Timers 3, 4, 5  Oddly do not use the divisors the data sheet says: Below are actual measured values!)
  TCCR0B = (TCCR0B & 0xF8) | 0x01; //pin 4,13  PWM = 31KHz 
  TCCR1B = (TCCR1B & 0xF8) | 0x01; //pin 11,12 PWM = 31KHz 
  TCCR2B = (TCCR2B & 0xF8) | 0x01; //pin 9,10  PWM = 31KHz 
//  TCCR3B = (TCCR3B & 0xF8) | 0x01; //pin 2,3,5 PWM = 31KHz 
//  TCCR4B = (TCCR4B & 0xF8) | 0x01; //pin 6,7,8 PWM = 31KHz 
//  TCCR5B = (TCCR5B & 0xF8) | 0x01; //pin 44,45,46 PWM = 31KHz 

  setupBlueToothConnection();

  ADB::init();
  connection = ADB::addConnection("tcp:4568", true, adbEventHandler);  
}
 
void loop()
{
  if(Serial1.available() == 54 && Serial1.peek() == 0){
    for (int pin=0; pin<=53; pin++)
    {
      byte val = Serial1.read();

      if (pin > 14 || val == 0)
      {
        digitalWrite(pin, val);
      } else if (pin > 1) 
      {
        if (val > 10) {
          analogWrite(pin, val);
        } else {
          /*if (val > 0)*/ val = 215 + val*4;
          analogWrite(pin, val);
        }
      }
    }
  }
  Serial1.flush();
  
  ADB::poll();
}

void setupBlueToothConnection()
{	
  Serial1.begin(9600);  
  Serial1.print("\r\n+STWMOD=0\r\n");             // set the bluetooth work in slave mode
  Serial1.print("\r\n+STNA=SeeedBTSlave\r\n");    // set the bluetooth name as "SeeedBTSlave"
  Serial1.print("\r\n+STOAUT=1\r\n");             // Permit Paired device to connect me
  Serial1.print("\r\n+STAUTO=0\r\n");             // Auto-connection should be forbidden here
  delay(2000);                                            // This delay is required.
  Serial1.print("\r\n+INQ=1\r\n");                // make the slave bluetooth inquirable
  delay(2000);                                            // This delay is required. 
  Serial1.flush();

}
